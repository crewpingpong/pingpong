<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap type="Board" id="board_rm">
		<id property="boardNo" column="BOARD_NO"/>
		<result property="boardContent" column="BOARD_CONTENT"/>	
		<result property="boardDate" column="BOARD_DATE"/>	
		<result property="boardDelFl" column="BOARD_DEL_FL"/>	
		<result property="boardCount" column="BOARD_COUNT"/>	
		<result property="thumbnail" column="THUMBNAIL"/>	
		<result property="authority" column="AUTHORITY"/>	
		<result property="memberNo" column="MEMBER_NO"/>
		
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		<result property="oneLiner" column="ONE_LINER"/>
		<result property="memberUrl" column="MEMBER_URL"/>
		
		<result property="likeCount" column="LIKE_COUNT"/>
		<result property="likeCheck" column="LIKE_CHECK"/>
					
		<collection property="bookmarkList"
					select="selectBookmarkList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="Bookmark"
					/>			
					
		<collection property="likeList"
					select="selectLikeList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="Like"
					/>
		
		<collection property="imageList"
					select="selectImageList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="BoardImage"
					/>
					
		<collection property="commentList"
					select="selectCommentList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="Comment"
					/>
	</resultMap>
	<resultMap type="Like" id="like_rm" autoMapping="true">
		<id property="boardNo" column="BOARD_NO"/>
		<id property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<resultMap type="Bookmark" id="bookmark_rm" autoMapping="true">
		<id property="boardNo" column="BOARD_NO"/>
		<id property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<resultMap type="BoardImage" id="boardImage_rm">
		<id property="imgNo" column="IMG_NO"/>
		<result property="imgOrder" column="IMG_ORDER"/>
		<result property="imgAddress" column="IMG_ADDRESS"/>
		<result property="boardNo" column="BOARD_NO"/>
	</resultMap>
	
	<resultMap type="Comment" id="comment_rm">
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="commentContent" column="COMMENT_CONTENT"/>
		<result property="commentDate" column="COMMENT_DATE"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="profileImg" column="PROFILE_IMG"/>
		<result property="parentNo" column="PARENT_NO"/>
		<result property="childCheck" column="CHILD_CHECK"/>
		<result property="commentDelFl" column="COMMENT_DEL_FL"/>		
	</resultMap>
	
	<select id="selectCommentList" resultMap="comment_rm">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
				<![CDATA[
				CASE  
					WHEN SYSDATE - COMMENT_DATE < 1/24/60
					THEN FLOOR( (SYSDATE - COMMENT_DATE) * 24 * 60 * 60 ) || '초 전'
					WHEN SYSDATE - COMMENT_DATE < 1/24
					THEN FLOOR( (SYSDATE - COMMENT_DATE) * 24 * 60) || '분 전'
					WHEN SYSDATE - COMMENT_DATE < 1
					THEN FLOOR( (SYSDATE - COMMENT_DATE) * 24) || '시간 전'
					ELSE TO_CHAR(COMMENT_DATE, 'YYYY-MM-DD')
				END COMMENT_DATE,
				]]>
			 
				BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL,
				(SELECT COUNT(*) FROM "COMMENT" IIC WHERE IIC.PARENT_NO IN (SELECT IC.COMMENT_NO FROM "COMMENT")) CHILD_CHECK
			FROM "COMMENT" IC
			JOIN "MEMBER" M ON(IC.COMMENT_MEMBER_NO = M.MEMBER_NO)
			LEFT JOIN "MEMBER_PROFILE" USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		START WITH PARENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>

	<select id="selectBoardList" resultMap="board_rm">
		SELECT BOARD_NO, IMG_ADDRESS THUMBNAIL
		FROM BOARD
		JOIN BOARD_IMG USING(BOARD_NO)
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_DEL_FL = 'N'
		AND IMG_ORDER = 1
		ORDER BY BOARD_NO DESC
	</select>	
	
	<select id="selectBoardMarkList" resultMap="board_rm">
		SELECT BOARD_NO, IMG_ADDRESS THUMBNAIL
		FROM BOARD
		LEFT JOIN BOARD_IMG USING(BOARD_NO)
		WHERE BOARD_NO IN (SELECT BOARD_NO FROM "BOOKMARK"
				WHERE MEMBER_NO = #{memberNo})
		AND BOARD_DEL_FL='N'
		AND IMG_ORDER = 1
	</select>
	
	<select id="selectBoardLikeList" resultMap="board_rm">
		SELECT BOARD_NO, IMG_ADDRESS THUMBNAIL
		FROM BOARD
		LEFT JOIN BOARD_IMG USING(BOARD_NO)
		WHERE BOARD_NO IN (SELECT BOARD_NO FROM "LIKE"
				WHERE MEMBER_NO = #{memberNo})
		AND BOARD_DEL_FL='N'
		AND IMG_ORDER = 1
	</select>
	
	<!-- 게시글 상세 조회 -->
	<select id="selectBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_CONTENT, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, ONE_LINER, 
		(SELECT COUNT(*) FROM "LIKE" L
		 WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
		 	<![CDATA[
				CASE  
					WHEN SYSDATE - BOARD_DATE < 1/24/60
					THEN FLOOR( (SYSDATE - BOARD_DATE) * 24 * 60 * 60 ) || '초 전'
					WHEN SYSDATE - BOARD_DATE < 1/24
					THEN FLOOR( (SYSDATE - BOARD_DATE) * 24 * 60) || '분 전'
					WHEN SYSDATE - BOARD_DATE < 1
					THEN FLOOR( (SYSDATE - BOARD_DATE) * 24) || '시간 전'
					ELSE TO_CHAR(BOARD_DATE, 'YYYY-MM-DD')
				END BOARD_DATE
			]]>
		 FROM "BOARD" B
		 JOIN "MEMBER" USING(MEMBER_NO)
		 LEFT JOIN "MEMBER_PROFILE" USING(MEMBER_NO)
		 WHERE BOARD_DEL_FL = 'N'
		 AND BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectImageList" resultMap="boardImage_rm">
		SELECT IMG_NO, IMG_ORDER, IMG_ADDRESS, BOARD_NO
		FROM BOARD_IMG
		WHERE BOARD_NO = #{boardNo}
	</select>
	

	
	<select id="selectLikeList" resultMap="like_rm">
		SELECT MEMBER_NO
		FROM "LIKE"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectBookmarkList" resultMap="bookmark_rm">
		SELECT MEMBER_NO
		FROM "BOOKMARK"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
    <!-- 좋아요 테이블 삽입 -->
    <insert id="insertBoardLike">
        INSERT INTO "LIKE" VALUES(
        #{memberNo}, #{boardNo})
    </insert>
     
    <!-- 좋아요 테이블 삭제 -->
    <delete id="deleteBoardLike">
        DELETE FROM "LIKE"
        WHERE BOARD_NO = #{boardNo}
        AND MEMBER_NO = #{memberNo}
    </delete>
    
    <!-- 북마크 테이블 삽입 -->
    <insert id="insertBoardMarkup">
    	INSERT INTO "BOOKMARK" VALUES(
    	#{memberNo}, #{boardNo})
    </insert>
    
    <!-- 북마크 테이블 삭제 -->
	<delete id="deleteBoardMarkup">
		DELETE FROM "BOOKMARK"
		WHERE BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
	</delete>
    
    <!-- 좋아요 수 조회 -->
    <select id="countBoardLike" resultType="_int">
        SELECT COUNT(*) FROM "LIKE" WHERE BOARD_NO = #{boardNo}
    </select>
    
    <insert id="boardInsert" parameterType="Board" useGeneratedKeys="true">
    	<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>	
	
		INSERT INTO BOARD 
	      VALUES( #{boardNo},
	              #{boardContent},
	              DEFAULT, DEFAULT, 
	              #{memberNo})
    </insert>
    
    <insert id="insertImageList" parameterType="list">
    	INSERT INTO "BOARD_IMG"
    	SELECT SEQ_BOARD_IMG_NO.NEXTVAL, A.*
    	FROM(
    		<foreach collection="list" item="img" separator=" UNION ALL ">
				SELECT #{img.imgOrder} IMG_ORDER
						, #{img.imgAddress} IMG_ADDRESS
					   	, #{img.boardNo} BOARD_NO 
				FROM DUAL 
			</foreach>	
    	) A
    </insert>
    
    <insert id="insertComment">
    	INSERT INTO "COMMENT" VALUES(
    	SEQ_COMMENT_NO.NEXTVAL, #{commentContent}, SYSDATE, #{memberNo}, #{boardNo}, DEFAULT, #{parentNo})
    
    </insert>
	
</mapper>
