<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="messageMapper">

	<!-- 메세지 관련 -->
	<resultMap type="Message" id="message_rm">
		<id property="messageNo" column="MESSAGE_NO" />
		<result property="messageContent" column="MESSAGE_CONTENT" />
		<result property="sendDate" column="SEND_DATE" />
		<result property="sendMember" column="SEND_MEMBER" />
		<result property="profileImg" column="PROFILE_IMG" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="receivedMember" column="RECEIVED_MEMBER"/>
		
		<result property="messageDelFl" column="MESSAGE_DEL_FL"/>
		<result property="messageSendDelFl" column="MESSAGE_SEND_DEL_FL"/>
		<result property="createDate" column="CREATE_DATE"/>
	</resultMap>
	
	<!-- 알람 관련 -->
    <resultMap type="Notice" id="notice_rm">
        <id property="noticeNo" column="NOTICE_NO" />
        <result property="noticeContent" column="NOTICE_COMENT" />
        <result property="elapsedDate" column="ELAPSED_TIME" />
        <result property="memberNo" column="MEMBER_NO" />
    </resultMap>
	
	<!-- 받은 메세지 조회 -->
	<select id="messageList" resultMap="message_rm">
		SELECT m.MESSAGE_NO, m.MESSAGE_CONTENT, m.SEND_DATE, m.SEND_MEMBER, m.RECEIVED_MEMBER, 
				PROFILE_IMG, MEMBER_NICKNAME, m.MESSAGE_DEL_FL,
				<![CDATA[
				CASE  
					WHEN SYSDATE - m.SEND_DATE < 1/24/60
					THEN FLOOR( (SYSDATE - m.SEND_DATE) * 24 * 60 * 60 ) || '초 전'
					WHEN SYSDATE - m.SEND_DATE < 1/24
					THEN FLOOR( (SYSDATE - m.SEND_DATE) * 24 * 60) || '분 전'
					WHEN SYSDATE - m.SEND_DATE < 1
					THEN FLOOR( (SYSDATE - m.SEND_DATE) * 24) || '시간 전'
					ELSE TO_CHAR(m.SEND_DATE, 'YYYY-MM-DD')
				END CREATE_DATE
				]]>
		FROM MESSAGE m
		JOIN "MEMBER_PROFILE" ON (SEND_MEMBER=MEMBER_NO)
		LEFT JOIN "MEMBER" USING (MEMBER_NO)
		WHERE RECEIVED_MEMBER = #{memberNo}
		AND m.MESSAGE_DEL_FL ='N'
		ORDER BY 1 DESC
	</select>
	
	<!-- 보낸 메세지 조회 -->
	<select id="sendmessageList" resultMap="message_rm">
		SELECT m.MESSAGE_NO, m.MESSAGE_CONTENT, 
			   TO_CHAR(m.SEND_DATE, 'YYYY-MM-DD HH24":"MI') SEND_DATE, 
			   m.SEND_MEMBER, m.RECEIVED_MEMBER,
		       MP.PROFILE_IMG, R.MEMBER_NICKNAME MEMBER_NICKNAME, m.MESSAGE_SEND_DEL_FL
		FROM MESSAGE m
		RIGHT JOIN "MEMBER_PROFILE" MP ON (m.RECEIVED_MEMBER = MP.MEMBER_NO)
		JOIN "MEMBER" S ON (m.SEND_MEMBER = S.MEMBER_NO)
		JOIN "MEMBER" R ON (m.RECEIVED_MEMBER = R.MEMBER_NO)
		WHERE m.SEND_MEMBER = #{memberNo}
		AND m.MESSAGE_SEND_DEL_FL = 'N'
		ORDER BY 1 DESC
	</select>
	
	<!-- 답장하기 -->
	<insert id="resendMessage">
		INSERT INTO MESSAGE
		(MESSAGE_NO, MESSAGE_CONTENT, SEND_DATE, SEND_MEMBER, RECEIVED_MEMBER)
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, SYSDATE, #{sendMember}, #{receivedMember})
	</insert>
	
	<!-- 받은 메세지 삭제 -->
	<update id="delmessage">
		UPDATE MESSAGE
		SET MESSAGE_DEL_FL='Y' 
		WHERE MESSAGE_NO= #{delNo}
		AND MESSAGE_DEL_FL='N'
	</update>
	
	<!-- 보낸 메세지 삭제 -->
 	<update id="delSendmessage">
		UPDATE MESSAGE
		SET MESSAGE_SEND_DEL_FL='Y' 
		WHERE MESSAGE_NO= #{delNo}
		AND MESSAGE_SEND_DEL_FL='N'
	</update>
	
	<!-- 받은 메세지 전체 삭제 -->
	<update id="reciveDelAll">
		UPDATE MESSAGE
		SET MESSAGE_DEL_FL='Y'
		WHERE RECEIVED_MEMBER = #{memberNo}
	</update>
	
	<!-- 보낸 메세지 전체 삭제 -->
	<update id="sendDelAll">
		UPDATE MESSAGE
		SET MESSAGE_SEND_DEL_FL='Y'
		WHERE SEND_MEMBER = #{memberNo}
	</update>
	
	
	<!-- 메세지 보내기 -->
	<insert id="sendMessage">
		INSERT INTO MESSAGE
		(MESSAGE_NO, MESSAGE_CONTENT, SEND_DATE, SEND_MEMBER, RECEIVED_MEMBER)
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, SYSDATE, #{sendMember}, #{receivedMember})
	</insert>
	
</mapper>
